"""Curated content for the Lazy God prototype.

This module centralises authored content such as nation archetypes and event
templates.  Having a single location for narrative data keeps the core engine
focused on rules while making it easier to expand the world in later
milestones.
"""

from __future__ import annotations

from dataclasses import dataclass
from typing import List, Sequence, Tuple

from .models import Demeanor, EconomyType, EventChoiceEffect, EventKind, Race


@dataclass(frozen=True)
class NationArchetype:
    """Defines a themed nation with bespoke stat ranges and flavour."""

    key: str
    title: str
    race: Race
    economy: EconomyType
    demeanor: Demeanor
    name_prefixes: Sequence[str]
    name_suffixes: Sequence[str]
    prosperity_range: Tuple[float, float]
    unrest_range: Tuple[float, float]
    power_range: Tuple[float, float]
    hidden_traits: Sequence[str]
    description: str
    stability_bias: float = 0.0


NATION_ARCHETYPES: List[NationArchetype] = [
    NationArchetype(
        key="sky_bazaar",
        title="Sky Bazaar Coalition",
        race=Race.fae,
        economy=EconomyType.trade,
        demeanor=Demeanor.diplomatic,
        name_prefixes=["Zeph", "Cir", "Aeri", "Lum", "Nim"],
        name_suffixes=["aris", "ora", "elle", "wyn", "ith"],
        prosperity_range=(0.65, 0.9),
        unrest_range=(0.05, 0.18),
        power_range=(0.4, 0.7),
        hidden_traits=("mercantile", "xenophile", "aerial_trade"),
        description="Floating marketplaces that thrive on intricate trade treaties.",
        stability_bias=0.05,
    ),
    NationArchetype(
        key="ember_legion",
        title="Ember Legion",
        race=Race.orc,
        economy=EconomyType.industrial,
        demeanor=Demeanor.aggressive,
        name_prefixes=["Gra", "Vor", "Shra", "Drak", "Kor"],
        name_suffixes=["gar", "mok", "thra", "zir", "vash"],
        prosperity_range=(0.35, 0.55),
        unrest_range=(0.12, 0.28),
        power_range=(0.6, 0.95),
        hidden_traits=("martial_culture", "blood_feud", "siege_engineers"),
        description="Forged from volcanic foundries, the legion seeks worthy foes.",
        stability_bias=-0.05,
    ),
    NationArchetype(
        key="everlight_conclave",
        title="Everlight Conclave",
        race=Race.elf,
        economy=EconomyType.magic_based,
        demeanor=Demeanor.stoic,
        name_prefixes=["Ael", "Ily", "Ser", "Cal", "Vor"],
        name_suffixes=["dorei", "wyn", "thas", "ion", "riel"],
        prosperity_range=(0.58, 0.82),
        unrest_range=(0.02, 0.12),
        power_range=(0.45, 0.75),
        hidden_traits=("mystic", "prophecy_guardians", "ancient_grievances"),
        description="Luminescent forests shelter the Conclave's patient schemes.",
        stability_bias=0.07,
    ),
    NationArchetype(
        key="tidebound_clans",
        title="Tidebound Clans",
        race=Race.merfolk,
        economy=EconomyType.resource_rich,
        demeanor=Demeanor.cautious,
        name_prefixes=["Ner", "Pel", "Aby", "Sir", "Kor"],
        name_suffixes=["alis", "thys", "sira", "lyn", "dros"],
        prosperity_range=(0.5, 0.78),
        unrest_range=(0.08, 0.2),
        power_range=(0.3, 0.6),
        hidden_traits=("tidal_memory", "isolationist", "kelp_tithe"),
        description="Semi-nomadic sea clans balancing surface trade with deep rites.",
    ),
    NationArchetype(
        key="clockwork_hold",
        title="Clockwork Hold",
        race=Race.dwarf,
        economy=EconomyType.industrial,
        demeanor=Demeanor.opportunistic,
        name_prefixes=["Gear", "Bolt", "Steam", "Iron", "Grim"],
        name_suffixes=["fast", "spire", "garde", "forge", "reach"],
        prosperity_range=(0.48, 0.76),
        unrest_range=(0.06, 0.16),
        power_range=(0.5, 0.85),
        hidden_traits=("tinkerers", "mercantile", "oathbound"),
        description="A subterranean syndicate obsessed with precision bargains.",
    ),
    NationArchetype(
        key="ashen_scriptorium",
        title="Ashen Scriptorium",
        race=Race.undead,
        economy=EconomyType.magic_based,
        demeanor=Demeanor.diplomatic,
        name_prefixes=["Vira", "Noct", "Ebon", "Grav", "Sepu"],
        name_suffixes=["lith", "shade", "morne", "crypt", "line"],
        prosperity_range=(0.42, 0.7),
        unrest_range=(0.01, 0.08),
        power_range=(0.55, 0.78),
        hidden_traits=("eternal_bureaucracy", "prophecy_archives", "pacifist"),
        description="Undying scholars mediate conflicts with chilling neutrality.",
        stability_bias=0.04,
    ),
    NationArchetype(
        key="saffron_republic",
        title="Saffron Republic",
        race=Race.human,
        economy=EconomyType.trade,
        demeanor=Demeanor.opportunistic,
        name_prefixes=["Sar", "Kal", "Rah", "Mir", "Vel"],
        name_suffixes=["sai", "dara", "imur", "jali", "kesh"],
        prosperity_range=(0.55, 0.83),
        unrest_range=(0.09, 0.22),
        power_range=(0.35, 0.65),
        hidden_traits=("merchant_princes", "festival_culture", "spy_ring"),
        description="Spice routes bankroll audacious diplomacy and covert deals.",
    ),
    NationArchetype(
        key="storm_forged_alliance",
        title="Storm-Forged Alliance",
        race=Race.lizardfolk,
        economy=EconomyType.pastoral,
        demeanor=Demeanor.chaotic,
        name_prefixes=["Ssz", "Zar", "Ish", "Qel", "Vor"],
        name_suffixes=["thak", "ashi", "ik", "quess", "tor"],
        prosperity_range=(0.32, 0.58),
        unrest_range=(0.14, 0.3),
        power_range=(0.45, 0.72),
        hidden_traits=("storm_riders", "shifting_loyalties", "totem_duels"),
        description="Tribal sky-riders whose alliances shift with every storm front.",
    ),
    NationArchetype(
        key="jade_harmonics",
        title="Jade Harmonics",
        race=Race.djinn,
        economy=EconomyType.magic_based,
        demeanor=Demeanor.diplomatic,
        name_prefixes=["Akh", "Zin", "Far", "Lum", "Qas"],
        name_suffixes=["ari", "azar", "hal", "ith", "een"],
        prosperity_range=(0.6, 0.88),
        unrest_range=(0.03, 0.1),
        power_range=(0.4, 0.68),
        hidden_traits=("wish_brokers", "enigmatic_pacts", "celestial_debts"),
        description="Shimmering diplomats who negotiate with literal wishes.",
        stability_bias=0.06,
    ),
    NationArchetype(
        key="rustborn_collective",
        title="Rustborn Collective",
        race=Race.golem,
        economy=EconomyType.industrial,
        demeanor=Demeanor.stoic,
        name_prefixes=["Ferr", "Ox", "Mag", "Volt", "An"],
        name_suffixes=["us", "ite", "ron", "gear", "vil"],
        prosperity_range=(0.4, 0.66),
        unrest_range=(0.0, 0.12),
        power_range=(0.58, 0.9),
        hidden_traits=("unyielding", "collective_consciousness", "slow_to_trust"),
        description="An industrial commune that values order above sentiment.",
        stability_bias=0.03,
    ),
    NationArchetype(
        key="sunfeast_concord",
        title="Sunfeast Concord",
        race=Race.human,
        economy=EconomyType.pastoral,
        demeanor=Demeanor.diplomatic,
        name_prefixes=["Sol", "Aur", "Hel", "Mar", "Gal"],
        name_suffixes=["oria", "enna", "essa", "diel", "dara"],
        prosperity_range=(0.45, 0.74),
        unrest_range=(0.04, 0.14),
        power_range=(0.25, 0.52),
        hidden_traits=("festival_culture", "agricultural_plenty", "peace_oath"),
        description="Peace-loving farmers who celebrate every harvest with diplomacy.",
        stability_bias=0.02,
    ),
]


@dataclass(frozen=True)
class EventTemplate:
    """Blueprint describing a authored event."""

    key: str
    kind: EventKind
    summary_template: str
    tags: Tuple[str, ...]
    peace_effects: Tuple[EventChoiceEffect, ...]
    hostile_effects: Tuple[EventChoiceEffect, ...]
    trade_effects: Tuple[EventChoiceEffect, ...]
    punchline: str


def _effects(stability: float, score: int) -> Tuple[EventChoiceEffect, ...]:
    """Helper to create common stability/score effect tuples."""

    return (
        EventChoiceEffect(target="global", attribute="stability", delta=stability),
        EventChoiceEffect(target="score", attribute="points", delta=float(score)),
    )


EVENT_TEMPLATES: List[EventTemplate] = [
    EventTemplate(
        key="festival_moot",
        kind=EventKind.interaction,
        summary_template="{a} invites {b} to a festival of improbable desserts.",
        tags=("diplomacy", "comedy"),
        peace_effects=_effects(0.14, 140),
        hostile_effects=_effects(-0.18, 40),
        trade_effects=_effects(0.09, 90),
        punchline="Your envoy debates whether custard counts as a binding treaty.",
    ),
    EventTemplate(
        key="border_skirmish",
        kind=EventKind.interaction,
        summary_template="Frontier patrols from {a} and {b} argue over a wandering goat.",
        tags=("conflict", "diplomacy"),
        peace_effects=_effects(0.12, 110),
        hostile_effects=_effects(-0.25, 70),
        trade_effects=_effects(0.04, 60),
        punchline="The goat is later elected mayor of the disputed valley.",
    ),
    EventTemplate(
        key="arcane_trade",
        kind=EventKind.tech_magic,
        summary_template="{a} unveils a portal-powered mail system and courts {b}.",
        tags=("technology", "trade"),
        peace_effects=_effects(0.08, 100),
        hostile_effects=_effects(-0.15, 55),
        trade_effects=_effects(0.11, 130),
        punchline="Express delivery now guaranteed before the thought even finishes.",
    ),
    EventTemplate(
        key="oracle_dispute",
        kind=EventKind.prophecy,
        summary_template="Competing prophecies declare {a} and {b} both destined to save the world first.",
        tags=("prophecy", "diplomacy"),
        peace_effects=_effects(0.1, 120),
        hostile_effects=_effects(-0.22, 65),
        trade_effects=_effects(0.05, 80),
        punchline="You settle it by declaring a joint prophecy with shared branding rights.",
    ),
    EventTemplate(
        key="pirate_raiders",
        kind=EventKind.disaster,
        summary_template="Sky pirates raid trade routes between {a} and {b}.",
        tags=("disaster", "conflict"),
        peace_effects=_effects(0.06, 90),
        hostile_effects=_effects(-0.3, 120),
        trade_effects=_effects(0.02, 140),
        punchline="The pirates leave behind a thank-you note for the thrilling chase.",
    ),
    EventTemplate(
        key="cultural_exhibit",
        kind=EventKind.interaction,
        summary_template="{a} shares holographic memories with {b}'s historians.",
        tags=("culture", "diplomacy"),
        peace_effects=_effects(0.13, 150),
        hostile_effects=_effects(-0.12, 30),
        trade_effects=_effects(0.07, 100),
        punchline="Tourists queue for hours just to taste a memory of soup.",
    ),
    EventTemplate(
        key="meteor_shower",
        kind=EventKind.disaster,
        summary_template="A meteor shower threatens shared farmland between {a} and {b}.",
        tags=("disaster", "cooperation"),
        peace_effects=_effects(0.11, 105),
        hostile_effects=_effects(-0.28, 75),
        trade_effects=_effects(0.03, 95),
        punchline="The scorched field now grows meteor-spiced peppers.",
    ),
    EventTemplate(
        key="diplomatic_prank",
        kind=EventKind.random,
        summary_template="Prankster diplomats from {a} replace {b}'s flags with interpretive kites.",
        tags=("comedy", "diplomacy"),
        peace_effects=_effects(0.09, 80),
        hostile_effects=_effects(-0.17, 45),
        trade_effects=_effects(0.05, 70),
        punchline="Turns out the kites sign better treaties than most ambassadors.",
    ),
    EventTemplate(
        key="sacred_grove",
        kind=EventKind.interaction,
        summary_template="{a}'s sacred grove migrates overnight into {b}'s territory.",
        tags=("mystic", "territory"),
        peace_effects=_effects(0.1, 115),
        hostile_effects=_effects(-0.2, 60),
        trade_effects=_effects(0.06, 85),
        punchline="Negotiations hinge on who gets visitation rights for the wandering trees.",
    ),
    EventTemplate(
        key="lost_relic",
        kind=EventKind.prophecy,
        summary_template="A relic revered by both {a} and {b} resurfaces at a pawn shop.",
        tags=("prophecy", "trade"),
        peace_effects=_effects(0.12, 125),
        hostile_effects=_effects(-0.24, 80),
        trade_effects=_effects(0.08, 110),
        punchline="Pawn broker refuses divine revelations without proper receipt.",
    ),
    EventTemplate(
        key="desert_march",
        kind=EventKind.disaster,
        summary_template="Dust storms strand caravans linking {a} and {b}.",
        tags=("disaster", "trade"),
        peace_effects=_effects(0.07, 100),
        hostile_effects=_effects(-0.21, 70),
        trade_effects=_effects(0.05, 135),
        punchline="Rescued traders now sell dust-storm spa treatments.",
    ),
    EventTemplate(
        key="culinary_duel",
        kind=EventKind.random,
        summary_template="Celebrity chefs from {a} and {b} demand a culinary duel judged by you.",
        tags=("comedy", "culture"),
        peace_effects=_effects(0.15, 160),
        hostile_effects=_effects(-0.16, 40),
        trade_effects=_effects(0.1, 110),
        punchline="You declare both winners and pocket the leftovers for divine brunch.",
    ),
    EventTemplate(
        key="treaty_expiration",
        kind=EventKind.interaction,
        summary_template="A century-old truce between {a} and {b} expires at sunset.",
        tags=("diplomacy", "conflict"),
        peace_effects=_effects(0.13, 140),
        hostile_effects=_effects(-0.27, 85),
        trade_effects=_effects(0.06, 95),
        punchline="The paperwork stack is taller than most mortal heroes.",
    ),
    EventTemplate(
        key="guild_strike",
        kind=EventKind.interaction,
        summary_template="Artisan guilds spanning {a} and {b} strike for better banquets.",
        tags=("economy", "comedy"),
        peace_effects=_effects(0.08, 90),
        hostile_effects=_effects(-0.19, 55),
        trade_effects=_effects(0.09, 120),
        punchline="Negotiations succeed once dessert is included in collective bargaining.",
    ),
    EventTemplate(
        key="arcane_miscalculation",
        kind=EventKind.disaster,
        summary_template="{a}'s teleport hub drops a fortress on {b}'s parade.",
        tags=("disaster", "technology"),
        peace_effects=_effects(0.05, 95),
        hostile_effects=_effects(-0.32, 100),
        trade_effects=_effects(0.01, 85),
        punchline="The parade routes now include an annual 'duck the fortress' drill.",
    ),
    EventTemplate(
        key="shared_omen",
        kind=EventKind.prophecy,
        summary_template="Omens depict {a} and {b} building a joint temple—or joint doom.",
        tags=("prophecy", "religion"),
        peace_effects=_effects(0.11, 125),
        hostile_effects=_effects(-0.23, 75),
        trade_effects=_effects(0.07, 105),
        punchline="The omen artists argue over color palettes for the apocalypse.",
    ),
    EventTemplate(
        key="sports_final",
        kind=EventKind.random,
        summary_template="Rival teams from {a} and {b} meet in a worldball final.",
        tags=("culture", "comedy"),
        peace_effects=_effects(0.1, 100),
        hostile_effects=_effects(-0.14, 60),
        trade_effects=_effects(0.09, 120),
        punchline="Your divine cam causes an accidental instant replay that unites the fans.",
    ),
    EventTemplate(
        key="library_heist",
        kind=EventKind.random,
        summary_template="Thieves steal both {a} and {b}'s national anthems and remix them.",
        tags=("comedy", "culture"),
        peace_effects=_effects(0.07, 85),
        hostile_effects=_effects(-0.18, 45),
        trade_effects=_effects(0.06, 100),
        punchline="The remix charts globally; royalties fund joint libraries.",
    ),
    EventTemplate(
        key="volcanic_alliance",
        kind=EventKind.disaster,
        summary_template="A dormant volcano awakens on the border of {a} and {b}.",
        tags=("disaster", "conflict"),
        peace_effects=_effects(0.09, 110),
        hostile_effects=_effects(-0.29, 85),
        trade_effects=_effects(0.04, 100),
        punchline="Lava tourism becomes the region's surprise success story.",
    ),
    EventTemplate(
        key="arcade_challenge",
        kind=EventKind.random,
        summary_template="{a} challenges {b} to settle disputes via retro arcade machines.",
        tags=("technology", "comedy"),
        peace_effects=_effects(0.1, 115),
        hostile_effects=_effects(-0.12, 55),
        trade_effects=_effects(0.08, 105),
        punchline="High scores now grant temporary diplomatic immunity.",
    ),
    EventTemplate(
        key="plague_blossoms",
        kind=EventKind.disaster,
        summary_template="Bioluminescent pollen from {a} causes sneezing fits in {b}.",
        tags=("disaster", "biology"),
        peace_effects=_effects(0.06, 100),
        hostile_effects=_effects(-0.2, 60),
        trade_effects=_effects(0.07, 130),
        punchline="Pharmaceutical startups race to patent divine antihistamines.",
    ),
    EventTemplate(
        key="forgotten_tournament",
        kind=EventKind.interaction,
        summary_template="A duel scheduled 300 years ago finally reminds {a} and {b} to show up.",
        tags=("conflict", "tradition"),
        peace_effects=_effects(0.12, 135),
        hostile_effects=_effects(-0.26, 95),
        trade_effects=_effects(0.05, 90),
        punchline="Both contestants call in grandchildren as substitutes.",
    ),
    EventTemplate(
        key="shared_astronomy",
        kind=EventKind.tech_magic,
        summary_template="{a} and {b} discover their observatories target the same comet.",
        tags=("science", "diplomacy"),
        peace_effects=_effects(0.1, 120),
        hostile_effects=_effects(-0.17, 50),
        trade_effects=_effects(0.09, 140),
        punchline="The comet winks approvingly on celestial livestream.",
    ),
    EventTemplate(
        key="heir_swap",
        kind=EventKind.random,
        summary_template="Royal heirs from {a} and {b} accidentally swap luggage—and responsibilities.",
        tags=("diplomacy", "comedy"),
        peace_effects=_effects(0.11, 130),
        hostile_effects=_effects(-0.19, 70),
        trade_effects=_effects(0.07, 115),
        punchline="Turns out both heirs prefer each other's homework anyway.",
    ),
    EventTemplate(
        key="shadow_market",
        kind=EventKind.random,
        summary_template="A shadow market sells secrets about both {a} and {b}.",
        tags=("intrigue", "trade"),
        peace_effects=_effects(0.05, 90),
        hostile_effects=_effects(-0.22, 85),
        trade_effects=_effects(0.08, 140),
        punchline="The market closes after you publish the secrets as inspirational quotes.",
    ),
    EventTemplate(
        key="giant_beast",
        kind=EventKind.disaster,
        summary_template="A colossal beast naps across the border between {a} and {b}.",
        tags=("disaster", "comedy"),
        peace_effects=_effects(0.09, 110),
        hostile_effects=_effects(-0.27, 95),
        trade_effects=_effects(0.05, 100),
        punchline="Merchants profit from selling lullabies at wholesale.",
    ),
    EventTemplate(
        key="ancient_grievance",
        kind=EventKind.interaction,
        summary_template="A 900-year-old insult resurfaces between {a} and {b}.",
        tags=("conflict", "tradition"),
        peace_effects=_effects(0.1, 120),
        hostile_effects=_effects(-0.24, 80),
        trade_effects=_effects(0.04, 85),
        punchline="You officially declare the insult outdated and introduce new approved insults.",
    ),
    EventTemplate(
        key="mirror_expedition",
        kind=EventKind.tech_magic,
        summary_template="Explorers from {a} and {b} meet mirror versions of themselves.",
        tags=("mystic", "science"),
        peace_effects=_effects(0.13, 145),
        hostile_effects=_effects(-0.18, 65),
        trade_effects=_effects(0.09, 135),
        punchline="Mirror-you insists on being called the 'refraction manager'.",
    ),
    EventTemplate(
        key="shared_orchard",
        kind=EventKind.interaction,
        summary_template="A border orchard yields fruit that sings songs from both {a} and {b}.",
        tags=("culture", "trade"),
        peace_effects=_effects(0.12, 130),
        hostile_effects=_effects(-0.13, 45),
        trade_effects=_effects(0.1, 150),
        punchline="The chart-topping fruit demands 10% of merchandising.",
    ),
    EventTemplate(
        key="ancient_engine",
        kind=EventKind.tech_magic,
        summary_template="{a} uncovers an engine that requires {b}'s lost language to operate.",
        tags=("technology", "intrigue"),
        peace_effects=_effects(0.1, 125),
        hostile_effects=_effects(-0.21, 70),
        trade_effects=_effects(0.07, 120),
        punchline="Both nations now co-author the instruction manual best-seller.",
    ),
    EventTemplate(
        key="seasonal_migration",
        kind=EventKind.interaction,
        summary_template="Migrating sky-whales choose the airspace between {a} and {b}.",
        tags=("nature", "diplomacy"),
        peace_effects=_effects(0.09, 105),
        hostile_effects=_effects(-0.16, 60),
        trade_effects=_effects(0.08, 125),
        punchline="Local merchants sell sky-whale plushies with legally-binding hugs.",
    ),
    EventTemplate(
        key="shared_myth",
        kind=EventKind.prophecy,
        summary_template="Storytellers reveal {a} and {b} worship the same hero under different names.",
        tags=("prophecy", "culture"),
        peace_effects=_effects(0.14, 150),
        hostile_effects=_effects(-0.18, 55),
        trade_effects=_effects(0.09, 115),
        punchline="Fan clubs merge into a merchandising empire overnight.",
    ),
    EventTemplate(
        key="storm_barons",
        kind=EventKind.disaster,
        summary_template="Storm barons tax the lightning between {a} and {b}.",
        tags=("disaster", "intrigue"),
        peace_effects=_effects(0.07, 95),
        hostile_effects=_effects(-0.25, 90),
        trade_effects=_effects(0.06, 130),
        punchline="The barons accept coupons for thunder management fees.",
    ),
    EventTemplate(
        key="midnight_carnival",
        kind=EventKind.random,
        summary_template="A midnight carnival appears simultaneously in {a} and {b}.",
        tags=("mystic", "comedy"),
        peace_effects=_effects(0.11, 135),
        hostile_effects=_effects(-0.2, 65),
        trade_effects=_effects(0.08, 125),
        punchline="Carnival barkers now accept wishes as legal tender.",
    ),
    EventTemplate(
        key="architects_feud",
        kind=EventKind.interaction,
        summary_template="Rival architects from {a} and {b} propose mutually exclusive wonders.",
        tags=("culture", "economy"),
        peace_effects=_effects(0.1, 120),
        hostile_effects=_effects(-0.22, 75),
        trade_effects=_effects(0.09, 140),
        punchline="You approve a hybrid wonder shaped like a polite compromise.",
    ),
    EventTemplate(
        key="moon_quorum",
        kind=EventKind.prophecy,
        summary_template="Both {a} and {b} receive invitations to the secret moon quorum.",
        tags=("prophecy", "intrigue"),
        peace_effects=_effects(0.12, 140),
        hostile_effects=_effects(-0.2, 70),
        trade_effects=_effects(0.07, 110),
        punchline="The moon's minutes are inexplicably written in pastry recipes.",
    ),
    EventTemplate(
        key="miracle_harvest",
        kind=EventKind.interaction,
        summary_template="Bountiful harvests in {a} flood {b}'s markets with surplus joyfruit.",
        tags=("economy", "culture"),
        peace_effects=_effects(0.13, 150),
        hostile_effects=_effects(-0.15, 45),
        trade_effects=_effects(0.11, 160),
        punchline="Joyfruit juice becomes the official drink of diplomatic brunches.",
    ),
]

